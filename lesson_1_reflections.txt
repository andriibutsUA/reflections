How did viewing a diff between two versions of a file help you see the bug that was introduced?
It compared two versions and highlighted every line that was changed.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
You can quickly find bugs and revert to previous versions if needed.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: manual control, ability to separate commits logically.
Cons: can forget to commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because Git was made with coding in mind: programs usually consits of multiple connected files, while office docs usually are not connected.

How can you use the commands git log and git diff to view the history of files?
git log lists commits and their creation date; with git diff you can see which lines of code were deleted or added when comparing 2 commits

How might using version control make you more confident to make changes that could break something?
You can always revert to the previous version and see what caused the problem

Now that you have your workspace set up, what do you want to try using Git for?
I want to try it for any coding project.